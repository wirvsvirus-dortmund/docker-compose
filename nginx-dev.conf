# proxypass to dockerhost both to npm on 8080 and to flask on 5000


upstream backend {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response
    server localhost:5000 fail_timeout=0;
}

upstream frontend {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response
    server localhost:8080 fail_timeout=0;
}


server {
    listen 8000 default_server;
    listen [::]:8000 default_server;


    location /api {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_pass http://backend;
    }

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_pass http://frontend;
    }
}

